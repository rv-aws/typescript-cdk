/// <reference types="socket.io-client" />
/// <reference types="socket.io" />
/// <reference types="node" />
import { IOStream, Options } from './iostream';
import { Client } from '../../client/client';
import { Connection } from '../../server/connection';
import { Tracker } from './tracker';
import { Stream } from 'stream';
export declare class Streamer {
    private client;
    private socket;
    private streams;
    constructor(client: Client, socket: SocketIOClient.Socket);
    constructor(connection: Connection<any>, socket: SocketIO.Socket);
    private generateId;
    createStream(options?: Options): IOStream;
    convertStream(stream: Stream, id: string): IOStream;
    sendStream(id: string, stream: IOStream, tracker: Tracker): void;
    private onRead;
    private onWrite;
    private onEnd;
    private onError;
    private onSocketDisconnect;
    read(id: string, size: number): void;
    write(id: string, chunk: any, encoding: string, callback: Function): void;
    end(id: string): void;
    error(id: string, error: Error): void;
    cleanup(id: string): void;
}
