/// <reference types="node" />
import { EventEmitter } from 'events';
import { Json } from '../serialize';
import { IOStream } from './iostream';
export declare class Tracker<T = Json> extends EventEmitter {
    readonly id: string;
    readonly value: T;
    readonly stream: IOStream;
    constructor(id: string, value: T, stream: IOStream);
    on(event: 'data', listener: (chunk: Chunk) => void): this;
    on(event: 'finish', listener: () => void): this;
    on(event: 'error', listener: (error: any) => void): this;
    on(event: 'close', listener: () => void): this;
}
export interface Chunk {
    index: number;
    data: Buffer | string;
    length: number;
}
